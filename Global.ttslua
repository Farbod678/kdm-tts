local Util = require("Kdm/Util/Util")
local Assert = require("Kdm/Util/Assert")
local Log = require("Kdm/Util/Log").ForPackage("G")
local Guids = require("Kdm/Guids")
local Archive = require("Kdm/Archive")
local Latch = require("Kdm/Util/Latch")
local Expansion = require("Kdm/Expansion")
local Rules = require("Kdm/Rules")
local DropZone = require("Kdm/Util/DropZone")
local CharSheet = require("Kdm/CharSheet")
local PlayerBoard = require("Kdm/PlayerBoard")
local Showdown = require("Kdm/Showdown")
local SettlementBoard = require("Kdm/SettlementBoard")
local RulesNav = require("Kdm/RulesNav")
local Terrain = require("Kdm/Terrain")
local Decks = require("Kdm/Decks")
local PopulationSheet = require("Kdm/PopulationSheet")
local Settlement = require("Kdm/Settlement")
local BattleUi = require("Kdm/BattleUi")

---------------------------------------------------------------------------------------------------

local Core = require("Kdm/Expansions/Core")
local CommunityEdition = require("Kdm/Expansions/CommunityEdition")
local DragonKing = require("Kdm/Expansions/DragonKing")
local DungBeetleKnight = require("Kdm/Expansions/DungBeetleKnight")
local FlowerKnight = require("Kdm/Expansions/FlowerKnight")
local Gorm = require("Kdm/Expansions/Gorm")
local LionGod = require("Kdm/Expansions/LionGod")
local LionKnight = require("Kdm/Expansions/LionKnight")
local LonelyTree = require("Kdm/Expansions/LonelyTree")
local Manhunter = require("Kdm/Expansions/Manhunter")
local Slenderman = require("Kdm/Expansions/Slenderman")
local Spidicules = require("Kdm/Expansions/Spidicules")
local Sunstalker = require("Kdm/Expansions/Sunstalker")

---------------------------------------------------------------------------------------------------

function onSave()
    local saveState = {
        Expansion = Expansion.Save(),
        Showdown = Showdown.Save(),
        PlayerBoard = PlayerBoard.Save(),
        Settlement = Settlement.Save(),
        PopulationSheet = PopulationSheet.Save(),
    }

    return JSON.encode(saveState)
end

---------------------------------------------------------------------------------------------------

function onLoad(saveJson)
    local uninteractable = {
        "Table",
        "Top Table",
        "Left Table",
        "Bottom Table",
        "Right Table",
        "Showdown Board",
        "Hunt Board",
        "Settlement Board",
        "Rules Board",
        "Rules Navigation Board",
        "Player 1 Board",
        "Player 2 Board",
        "Player 3 Board",
        "Player 4 Board",
        "Player 1 Marker",
        "Player 2 Marker",
        "Player 3 Marker",
        "Player 4 Marker",
        "Overlays",
    }
    for _, name in ipairs(uninteractable) do
        Guids.GetObject(name).interactable = false
    end

    local saveState = JSON.decode(saveJson) or {}

    local ui = { children = self.UI.getXmlTable() }

    Log.Init()
    Latch.Init()
    DropZone.Init()
    CharSheet.Init()
    PlayerBoard.Init(saveState.PlayerBoard)
    Showdown.Init(saveState.Showdown)
    SettlementBoard.Init(Guids.GetObject("Settlement Board"))
    Rules.Init(ui)
    RulesNav.Init(Guids.GetObject("Rules Navigation Board"))
    Terrain.Init()
    Decks.Init()
    PopulationSheet.Init(Guids.GetObject("Population Sheet"), saveState.PopulationSheet)
    Settlement.Init(saveState.Settlement, ui)
    BattleUi.Init(ui)

    for _, expansion in ipairs({ Core, DragonKing, DungBeetleKnight, FlowerKnight, Gorm, LionGod, LionKnight, LonelyTree, Manhunter, Slenderman, Spidicules, Sunstalker, CommunityEdition }) do
        Expansion.RegisterExpansion(expansion)
    end

    Expansion.Init(saveState.Expansion, ui)

    self.UI.setXmlTable(ui.children)
end

---------------------------------------------------------------------------------------------------
