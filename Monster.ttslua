local Log = require("Kdm/Log").ForPackage("Monster")
local Grid = require("Kdm/Grid")
local Overlay = require("Kdm/Overlay")
local EventManager = require("Kdm/EventManager")
local ShowdownBoard = require("Kdm/ShowdownBoard")

local Monster = {
    sizes = {
        ["Butcher"] = 2,
        ["Dragon King"] = 4,
        ["Dung Beetle Knight"] = 2,
        ["Flower Knight"] = 2,
        ["Gold Smoke Knight"] = 2,
        ["Gorm"] = 3,
        ["King's Man"] = 2,
        ["Lion God"] = 3,
        ["Lion Knight"] = 2,
        ["Lonely Tree"] = 2,
        ["Manhunter"] = 2,
        ["Phoenix"] = 3,
        ["Screaming Antelope"] = 2,
        ["Slenderman"] = 2,
        ["Spidicules"] = 2,
        ["Sunstalker"] = 4,
        ["The Hand"] = 2,
        ["The Tyrant"] = 2,
        ["Watcher"] = 2,
        ["White Gigalion"] = 3,
        ["White Lion"] = 2,
    }
}

---------------------------------------------------------------------------------------------------

local function Monster_OnObjectDrop(_, object)
    if object.getGMNotes() != "Monster Figurine" then
        return
    end

    local size = Monster.sizes[object.getName()]
    if not size then
        Log.Debugf("Monster %s (%s) has no registered size", object.getName(), object.getGUID())
        return
    end

    Log.Debugf("Monster %s (%s) dropped", object.getName(), object.getGUID())

    object.setPositionSmooth(
        Grid.Snap(object, size),
        false,  -- collide
        true   -- smooth
    )

    Overlay.Destroy(object)
end

---------------------------------------------------------------------------------------------------

local function Monster_OnObjectPickUp(_, object)
    if object.getGMNotes() != "Monster Figurine" then
        return
    end

    local size = Monster.sizes[object.getName()]
    if not size then
        Log.Debugf("Monster %s (%s) has no registered size", object.getName(), object.getGUID())
        return
    end

    Log.Debugf("Monster %s (%s) picked up", object.getName(), object.getGUID())

    local movement = ShowdownBoard.GetMovement()
    if movement == nil or movement == 0 then
        Log.Debugf("Movement zero")
        return
    end

    Overlay.Create(
        object.getPosition(),
        size,
        movement,
        { 0.0, 0.0, 0.0, 0.9 }
    )
end

---------------------------------------------------------------------------------------------------

function Monster.Init()
    EventManager.AddHandler("onObjectDrop", Monster_OnObjectDrop)
    EventManager.AddHandler("onObjectPickUp", Monster_OnObjectPickUp)
end

---------------------------------------------------------------------------------------------------

return Monster
