require("Kdm/Check")
local Util = require("Kdm/Util")

---------------------------------------------------------------------------------------------------

local Log_debugModules = {
    -- ["G"] = true,
    --["Survivor"] = true,
    --["SurvivorSheet"] = true,
    -- ["Population"] = true,
    -- ["PlayerBoard"] = true,
    --["BattleUi"] = true,
    -- ["Timeline"] = true,
    -- ["Setup"] = true,
}

---------------------------------------------------------------------------------------------------

local function Log_Printf(package, fmt, ...)
    fmt = fmt or ""
    local msg = Util.SafeFormat(fmt or "", ...)
    log(Util.SafeFormat("[%s] "..fmt or "", package, ...), nil, "print")
    printToAll(Util.SafeFormat("[66aaff]"..fmt, ...))
end

---------------------------------------------------------------------------------------------------

local function Log_Debugf(package, fmt, ...)
    if Log_debugModules[package] then
        fmt = fmt or ""
        local s = Util.SafeFormat("[%s] "..fmt, package, ...)
        log(s, nil, "debug")
    end
end

---------------------------------------------------------------------------------------------------

local function Log_Errorf(package, fmt, ...)
    fmt = fmt or ""
    log(Util.SafeFormat("[%s] "..fmt, package, ...), nil, "error")
    printToAll(Util.SafeFormat("[ff4444]"..fmt, ...))
end

---------------------------------------------------------------------------------------------------

local function Log_Broadcastf(package, fmt, ...)
    fmt = fmt or ""
    log(Util.SafeFormat("[%s] "..fmt, package, ...), nil, "print")
    broadcastToAll(Util.SafeFormat(fmt, ...))
end

---------------------------------------------------------------------------------------------------

local function Log_Init()
    logStyle("debug", { r = 1.0, g = 1.0, b = 1.0 }, "", "")
    logStyle("print", { r = 0.0, g = 1.0, b = 1.0 }, "", "")
    logStyle("error", { r = 1.0, g = 0.0, b = 0.0 }, "", "")
end

---------------------------------------------------------------------------------------------------

local function Log_EnableModule(module, enabled)
    Log_debugModules[module] = enabled
end

---------------------------------------------------------------------------------------------------

return {
    ForPackage = function(package)
        return {
            Printf = function(fmt, ...) Log_Printf(package, fmt, ...) end,
            Debugf = function(fmt, ...) Log_Debugf(package, fmt, ...) end,
            Errorf = function(fmt, ...) Log_Errorf(package, fmt, ...) end,
            Broadcastf = function(fmt, ...) Log_Broadcastf(package, fmt, ...) end,
            Init = Log_Init,
            EnableModule = Log_EnableModule,
        }
    end
}
