require("Kdm/Check")
local Util = require("Kdm/Util")
local Log = require("Kdm/Log").ForPackage("PopulationSheet")
local Ui = require("Kdm/Ui3d")
local EventManager = require("Kdm/EventManager")

---------------------------------------------------------------------------------------------------

local POPULATION_SHEET_MAX_SURVIVORS = 35

local PopulationSheet_id = 0

---------------------------------------------------------------------------------------------------

local PopulationSheetClass = {}
PopulationSheetClass.__index = PopulationSheetClass

local function PopulationSheet_Create(object)
    Log.Debugf("Creating population sheet for object %s", object.getGUID())

    local saveState = {}
    if object.script_state then
        saveState = JSON.decode(object.script_state) or {}
    end
    object.setLuaScript("--")   -- necessary else it won't actually save

    PopulationSheet_id = PopulationSheet_id + 1
    local populationSheet = {
        tag = "PopulationSheet",
        id = PopulationSheet_id,
        object = object,
        population = saveState.population or 4,
        newSurvivorBonuses = saveState.newSurvivorBonuses,
        survivors = {}
    }
    local saveStateSurvivors = saveState.survivors or {}
    for i = 1, POPULATION_SHEET_MAX_SURVIVORS do
        populationSheet.survivors[i] = saveStateSurvivors[i] or {}
    end
    setmetatable(populationSheet, PopulationSheetClass)

    local ui = { id = "PopulationSheet"..populationSheet.id, children = object.UI.getXmlTable() }

    local textColor = "#000000ff"
    populationSheet.populationCounter = Ui.Counter(ui, { object = object, id = "Population", topLeft = { x = 0.854564, y = -0.886970 }, bottomRight = { x = 0.774279, y = -0.806280 }, value = populationSheet.population, textColor = textColor, fontSize = 60, onValueChanged = function(delta)
        local value = populationSheet.population + delta
        populationSheet.population = value
        populationSheet.populationCounter:Set(value)
        populationSheet:Save()
    end })
    populationSheet.newSurvivorBonusesInput = Ui.Input(ui, { object = object, id = "NewSurvivorBonuses", topLeft = { x = 0.270658, y = -0.875729 }, bottomRight = { x = -0.662311, y = -0.843208 }, value = populationSheet.newSurvivorBonuses, textColor = textColor, fontSize = 30, onValueChanged = function(value)
        populationSheet.newSurvivorBonuses = value
        populationSheet.newSurvivorBonusesInput:Set(value)
        populationSheet:Save()
    end })

    local nameWidth = -0.273326
    local notesWidth = -1.348055
    local height = 0.044041
    local nameX = 0.854321
    local notesX = 0.575252
    local y1 = -0.743530
    local y35 = 0.839992
    local dy = (y35 - y1) / 34
    local deadX = -0.808309
    local deadY1 = -0.734205
    local deadWidth = -0.02342
    local deadHeight = 0.02342
    populationSheet.nameInputs = {}
    populationSheet.notesInputs = {}
    populationSheet.deadCheckBoxes = {}
    for i = 1, POPULATION_SHEET_MAX_SURVIVORS do
        local topLeft = { x = nameX, y = y1 + (i - 1) * dy }
        local bottomRight = { x = topLeft.x + nameWidth, y = topLeft.y + height }
        populationSheet.nameInputs[i] = Ui.Input(ui, { object = object, id = "Name"..i, topLeft = topLeft, bottomRight = bottomRight, value = populationSheet.survivors[i].name, textColor = textColor, fontSize = 30, onValueChanged = function(value)
            populationSheet.survivors[i].name = value
            populationSheet.nameInputs[i]:Set(value)
            populationSheet:Save()
        end })

        topLeft.x = notesX
        bottomRight.x = topLeft.x + notesWidth
        populationSheet.notesInputs[i] = Ui.Input(ui, { object = object, id = "Notes"..i, topLeft = topLeft, bottomRight = bottomRight, value = populationSheet.survivors[i].notes, textColor = textColor, fontSize = 30, onValueChanged = function(value)
            populationSheet.survivors[i].notes = value
            populationSheet.notesInputs[i]:Set(value)
            populationSheet:Save()
        end })

        topLeft = { x = deadX, y = deadY1 + (i - 1) * dy }
        bottomRight = { x = topLeft.x + deadWidth, y = topLeft.y + deadHeight }
        populationSheet.deadCheckBoxes[i] = Ui.CheckBox(ui, { object = object, id = "Dead"..i, topLeft = topLeft, bottomRight = bottomRight, image = "CheckBoxFilledBlack", value = populationSheet.survivors[i].dead, onClick = function()
            local value = not populationSheet.survivors[i].dead
            populationSheet.survivors[i].dead = value
            populationSheet.deadCheckBoxes[i]:Set(value)
            populationSheet:Save()
        end })
    end

    object.UI.setCustomAssets({
        {
            name = "CheckBoxFilledBlack",
            url = "http://cloud-3.steamusercontent.com/ugc/1303178815216490807/8B25E62C85BBE9C6ADF4B34229CF3C7C5DE3754E/",
        },
    })
    object.UI.setXmlTable(ui.children)

    return populationSheet
end

---------------------------------------------------------------------------------------------------

function PopulationSheetClass.Save(populationSheet)
    populationSheet.object.script_state = JSON.encode({
        population = populationSheet.population,
        newSurvivorBonuses = populationSheet.newSurvivorBonuses,
        survivors = populationSheet.survivors,
    })
end

---------------------------------------------------------------------------------------------------

local function PopulationSheet_Init()
    for _, object in ipairs(getAllObjects()) do
        if object.getGMNotes() == "Population Sheet" then
            local charSheet = PopulationSheet_Create(object)
        end
    end

    EventManager.AddHandler("onObjectSpawn", function(object)
        if object.getGMNotes() == "Population Sheet" then
            PopulationSheet_Create(object)
        end
    end)
end

---------------------------------------------------------------------------------------------------

return {
    Init = PopulationSheet_Init,
}
