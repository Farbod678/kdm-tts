require("Kdm/Util/Check")
local Ui = require("Kdm/Ui")

local UiCheckBox = {}

---------------------------------------------------------------------------------------------------

function UiCheckBox.Create(params)
    assert(CheckTab(params, "params"))
    local object = params.object
    assert(CheckObj(object, "params.object"))
    local name = params.name
    assert(CheckStr(name, "params.name"))
    assert(CheckBoolOrNil(params.value, "params.value"))
    assert(CheckVec(params.position, "params.position"))
    assert(CheckVecOrNil(params.scale, "params.scale"))
    assert(CheckNum(params.size, "params.size"))
    assert(CheckColOrNil(params.color, "params.color"))
    assert(CheckColOrNil(params.backgroundColor, "params.backgroundColor"))
    assert(CheckFuncOrNil(params.changeFunc, "params.changeFunc"))

    local uiCheckBox = {
        tag = "UiCheckBox",
        object = object,
        name = name,
    }

    local index = Ui.RecordButtonAndGetIndex(object)
    local clickFunctionName = "UiCheckBox_"..object.getGUID().."_"..index.."_"..name.."_Click"
    self.setVar(clickFunctionName, function (_, _, altClick) params.changeFunc(uiCheckBox) end)

    uiCheckBox.button = {
        index = index,
        label = params.value and "\u{25A0}" or "",
        position = params.position,
        scale = params.scale or Ui.SCALE,
        width = params.size,
        height = params.size,
        font_size = params.size * 1.2,
        font_color = params.color or Ui.DARK_BROWN,
        color = Ui.BACKGROUND_COLOR,
        click_function = clickFunctionName,
        function_owner = self,
    }
    object.createButton(uiCheckBox.button)

    return uiCheckBox
end

---------------------------------------------------------------------------------------------------

function UiCheckBox.Set(uiCheckBox, checked)
    assert(CheckTab(uiCheckBox, "uiCheckBox"))
    assert(Check(uiCheckBox.tag == "UiCheckBox", "uiCheckBox arg is not a UiCheckBox"))
    assert(CheckBoolOrNil(checked, "checked"))

    uiCheckBox.button.label = checked and "\u{25A0}" or ""
    uiCheckBox.object.editButton(uiCheckBox.button)
end

---------------------------------------------------------------------------------------------------

return UiCheckBox
